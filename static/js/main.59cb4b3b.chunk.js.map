{"version":3,"sources":["IncrementDecrement.js","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["IncrementDecrement","props","increment","state","i","number","setState","decrement","alert","start","className","onClick","this","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAsCeA,E,kDAjCX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAIVC,UAAY,SAACC,GACT,IAAIC,EAAI,EAAKD,MAAME,OAAS,EAC5B,EAAKC,SAAS,CAACD,OAAQD,KAPR,EAUnBG,UAAY,SAACJ,GACT,GAAoB,IAAjBA,EAAME,OAEL,OAAOG,MAAM,6BAEjB,EAAKF,SAAS,CAACD,OAAQF,EAAME,OAAS,KAbtC,EAAKF,MAAQ,CAAEE,OAAQJ,EAAMQ,OAFd,E,qDAkBT,IAAD,OACL,OACI,sBAAKC,UAAU,UAAf,UACQ,wBAAQA,UAAU,OAAOC,QAAS,kBAAM,EAAKT,UAAU,EAAKC,QAA5D,uBACA,4BAAIS,KAAKT,MAAME,SACf,wBAAQK,UAAU,OAAOC,QAAS,kBAAM,EAAKJ,UAAU,EAAKJ,QAA5D,8B,GAxBaU,aCJlB,I,MCWAC,MANf,WACE,OACE,cAAC,EAAD,CAAoBL,MAAS,MCKlBM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.59cb4b3b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./index.css\";\n\nclass IncrementDecrement extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { number: props.start};\n    }\n\n    increment = (state) => {\n        let i = this.state.number + 1;\n        this.setState({number: i});\n    };\n\n    decrement = (state) => {\n        if(state.number === 0)\n        {\n            return alert(\"Cannot be less than zero.\");\n        }\n        this.setState({number: state.number - 1});\n    };\n\n    render() {\n        return (\n            <div className=\"buttons\">\n                    <button className=\"btns\" onClick={() => this.increment(this.state)}>Increment</button>\n                    <p>{this.state.number}</p>\n                    <button className=\"btns\" onClick={() => this.decrement(this.state)}>Decrement</button>\n            </div>\n        );\n    }\n}\n\nIncrementDecrement.propTypes = {\n    start: PropTypes.number.isRequired,\n};\n\nexport default IncrementDecrement;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from \"react\";\nimport IncrementDecrement from \"./IncrementDecrement\";\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <IncrementDecrement start = {14} />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}